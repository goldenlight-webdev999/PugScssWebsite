// SCSS Mixins
//- Responsive
$breakpoints: ('extraSmall': (min-width: 480px),
  'small': (min-width: 768px),
  'medium': (min-width: 992px),
  'large': (min-width: 1200px),
  'xlarge': (min-width: 1400px),
  '2xlarge': (min-width: 1600px),
  '3xlarge': (min-width: 1900px)) !default;

@mixin respond-to($breakpoint) {

  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {

    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    +"Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin themeBG($color: $color-black) {
  background-color: $color;
  background-image: url(asset/image/bg/pattern.png);
  background-attachment: fixed;
  background-repeat: repeat;
  background-size: 510.6px 644.8px;
}

@mixin themeText($color: $text-neon) {
  color: $text-primary;
  text-transform: uppercase;
  animation: flicker 1.5s infinite alternate;
  font-family: $font-secondary;
  
  &::-moz-selection {
    color: $text-primary;
    user-select: none;
  }
  
  &::selection {
    color: $text-primary;
    user-select: none;
  }
  
  &:focus {
    outline: none;
  }
}

@mixin btn() {
  font-weight: 600;
  word-spacing: 4px;
  letter-spacing: 1px;
  font-size: $fs-regular;
  line-height: 24px;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 0px;
  min-width: 245px;
  max-width: 100%;
  padding: 1em 1em;

  &:focus {
    outline: none;
    box-shadow: none;
  }
}

@mixin themeBtn($text-color: $text-primary, $bg-color: $color-black, $hover-color: $color-black) {
  @include btn();
  color: $text-color;
  background-color: $bg-color;
  -webkit-transition: ease-out 0.5s;
  -moz-transition: ease-out 0.5s;
  transition: ease-out 0.5s;
  position: relative;
  border: none;
  box-shadow: 0 14px 28px rgb(0 0 0 / 60%), 0 10px 10px rgb(0 0 0 / 22%);
  border-radius: 5px;

  &::before {
    bottom: 0;
    right: 0;
    border-bottom: 3px solid transparent;
    border-right: 3px solid transparent;
  }

  &::after {
    top: 0;
    left: 0;
    border-top: 3px solid transparent;
    border-left: 3px solid transparent;
  }

  &::before,
  &::after {
    position: absolute;
    content: "";
    width: 0;
    height: 0;
    transition: .5s;
  }

  &:hover {
    background-color: $hover-color;
    color: $bg-color;

    &::before,
    &::after {
      width: 100%;
      height: 100%;
      border-color: $bg-color;
    }
  }
}

@mixin themeTooltip($tooltip-content) {
  display: inline-block;
  position: relative;

  &::after {
    content: attr($tooltip-content);
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translateX(-50%);
    margin-top: 10px;
    padding: .25rem 1rem;
    font-size: 0.75rem;
    font-weight: 500;
    white-space: nowrap;
    color: $text-inverse;
    border-radius: 5px;
    background-color: $bg-inverse;
    box-shadow: $shadow-dark-2;

    pointer-events: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    opacity: 0;
    z-index: $zi-hidden-less;
    transition: top 0.2s ease-in-out, opacity 0.2s ease-in-out, z-index 0.2s ease-in-out;
  }

  &:hover {
    &::after {
      top: 100%;
      opacity: 0.9;
      z-index: $zi-regular-high;
    }
  }
}

@mixin arrow($color: $color-black, $direction, $size: 8px) {
  width: 0;
  height: 0;
  border: solid $color;
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: $size;
  box-shadow: $shadow-dark-1;

  @if $direction == up {
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);
  } @else if $direction == down {
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
  } @else if $direction == left {
    transform: rotate(135deg);
    -webkit-transform: rotate(135deg);
  } @else if $direction == right {
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
  } @else {
    @warn "Unknown direction #{$direction}.";
  }
}

@mixin font-style($tag-name) {
  @if $tag-name == 'h1' {
    font-size: 2.5rem;
    font-weight: 700;
    line-height: 3.5rem;
    letter-spacing: -0.4px;
    @include respond-to('small') {
      font-size: 2.75rem;
    }
    @include respond-to('medium') {
      font-size: 3rem;
    }
  } @else if $tag-name == 'h2' {
    font-size: 2.25rem;
    font-weight: 600;    
    line-height: 3rem;
    letter-spacing: -0.4px;
    @include respond-to('small') {
      font-size: 2.375rem;
    }
    @include respond-to('medium') {
      font-size: 2.5rem;
    }
  } @else if $tag-name == 'h3' {
    font-weight: 600;
    font-size: 2rem;
    line-height: 2.5rem;
    letter-spacing: -0.2px;
    @include respond-to('small') {
      font-size: 2.125rem;
    }
    @include respond-to('medium') {
      font-size: 2.25rem;
    }
  } @else if $tag-name == 'h4' {
    font-size: 1.75rem;
    font-weight: 500;
    line-height: 2.25rem;
    letter-spacing: -0.2px;
    @include respond-to('small') {
      font-size: 1.875rem;
    }
    @include respond-to('medium') {
      font-size: 2rem;
    }
  } @else if $tag-name == 'h5' {
    font-size: 1.5rem;
    font-weight: 500;
    line-height: 2rem;
    @include respond-to('small') {
      font-size: 1.675rem;
    }
    @include respond-to('medium') {
      font-size: 1.75rem;
    }
  } @else if $tag-name == 'h6' {
    font-size: 1.25rem;
    font-weight: 500;
    line-height: 1.75rem;
    @include respond-to('small') {
      font-size: 1.375rem;
    }
    @include respond-to('medium') {
      font-size: 1.5rem;
    }
  } @else {
    
  }
}
